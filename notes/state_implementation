Which States are mutually exclusive:

Idle
Walk,
Backwalk,
Crouch,
Dash,
Backdash,
AirIdle,
AirBackdash,
Airdash

== Input Step (Generating Inputs) ==
1. Inputs are capatured									(read_inputs)
2. Input Buffers are updated						(write_to_input_buffer)

== Action Step (Responding to Input)==
For each character that's not
1. if a super is input, start that			(execute_supermoves)
2. if a special is input do that				(execute_specials)
3. if a normal is input, do that				(execute_normals)   Without Jumpsquat
4. if a jump is input, do that,					(execute_jumps)     Without Jumpsquat
5. if a dash is input do that,					(execute_dashes)    Without Jumpsquat
6. if basic movement is input do that		(execute_movement)  Without Jumpsquat

== Collision Step ==
1. Generate hitboxes										(maintain_hitboxes)
2. Generate hurtboxes										(maintain_hurtboxes)
3. Handle collision											(detect_collisions)
4. resolve collision results            (resolve_collisions)

== Physics Step ==
1. Execute any buffered jumps
2. Execute any buffered airdashes
3. Handle adding any necessary forces
4. Apply Forces to Velocity
5. Apply Velocity to transform
6. Generate landing events if necessary

== Result Step
1. Handle health changes								(update_health)
2. Handle meter changes                 (update_super_meter)
3. Handle ending the round              (finish_round)

== Cleanup Step
1. Refresh Movement resources, through an event
2. Handle all timers and add/remove components accordingly, also read from some events, if a landing event is recieved here we add any necessary busy




Player Components (Current):
- ActionState (This should be broken up, it contains waayyyyyy to much logic for a component)
- Movement(Can probably be reduced to a Velocity Component, with movement values stored in a resource)
- Blocking: If not busy and holding back, you will have this
- Busy: If doing an action that locks out your input you have this, needs to be removed when in a cancellable state
- Hitstop: Simmilar to busy but will allow buffering
- Stun: When you get hit or block

Player Components (New):
- MoveState (find a clean way to handle simple movement)
- Velocity
- Blocking
- Counterhit
- Blocking
- Busy
- Hitstop
- Stun


